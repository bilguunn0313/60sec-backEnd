datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {

  id            Int            @id @default(autoincrement())
  email         String         @unique
  username      String         @unique
  password      String
  role          Role           @default(USER)
  profile       Profile?
  profileId     Int?
  subscriptions Subscription[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model Profile {
  id          Int        @id @default(autoincrement())
  name        String
  avatarImage String?
  age         Int      @default(0) 
  userId      Int        @unique
  user        User       @relation(fields: [userId], references: [id])   
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  readings    Reading[]
  wrongWords   WrongWord[]
}

model Subscription {
  id        Int                @id @default(autoincrement())
  user      User               @relation(fields: [userId], references: [id])
  userId    Int
  plan      Plan               @relation(fields: [planId], references: [id])
  planId    Int
  startDate DateTime           @default(now())
  endDate   DateTime?
  status    SubscriptionStatus
  createdAt DateTime           @default(now())
  updatedAt DateTime           @updatedAt
}

model Plan {
  id            Int            @id @default(autoincrement())
  name          String
  price         Decimal        @db.Decimal(10, 2)
  interval      PlanInterval
  subscriptions Subscription[]
}

model Reading {
  id        Int       @id @default(autoincrement())
  sentences String
  startTime DateTime?
  endTime   DateTime?
  profileId Int
  profile   Profile   @relation(fields: [profileId], references: [id])
  accuracy  String
  audio     String?
}

model WrongWord {
  id            Int       @id @default(autoincrement())
  words         String
  profileId     Int
  profile       Profile   @relation(fields: [profileId], references: [id])
  isCorrect     Boolean
  correctAnswer String
  createdAt     DateTime  @default(now())
}

enum PlanInterval {
  FREE
  MONTHLY
  THREE_MONTHS
  YEARLY
}

enum SubscriptionStatus {
  ACTIVE
  CANCELED
  EXPIRED
  PAST_DUE
}

enum Role {
  USER
  ADMIN
}
